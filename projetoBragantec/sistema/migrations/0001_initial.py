# Generated by Django 2.2.7 on 2019-11-14 22:58

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(blank=True, choices=[('E', 'Estudante'), ('O', 'Orientador')], max_length=100)),
                ('idade', models.IntegerField(blank=True, default=None, verbose_name='Idade')),
                ('curso', models.CharField(blank=True, max_length=100, verbose_name='Curso')),
                ('serie', models.CharField(blank=True, max_length=100, verbose_name='Série')),
                ('instituicao', models.CharField(max_length=100, verbose_name='Instituição')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
            },
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(default=None, max_length=100)),
                ('resumo', models.CharField(max_length=200)),
                ('area', models.CharField(choices=[('CHL', 'Ciências Humanas e Linguagens'), ('CNE', 'Ciências da Natureza e Exatas'), ('I', 'Informática'), ('E', 'Engenharias')], max_length=100)),
                ('palavras_chave', models.CharField(max_length=30)),
                ('introducao', models.CharField(default=None, max_length=500)),
                ('objetivos', models.CharField(default=None, max_length=500)),
                ('material', models.CharField(default=None, max_length=500)),
                ('metodologia', models.CharField(default=None, max_length=500)),
                ('resultados', models.CharField(default=None, max_length=500)),
                ('referencias_bibliograficas', models.CharField(default=None, max_length=500)),
                ('plano_pesquisa', models.FileField(blank=True, upload_to='uploads/')),
                ('link_video', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Nome de Usuário')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nome')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Está ativo?')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='É da equipe?')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
